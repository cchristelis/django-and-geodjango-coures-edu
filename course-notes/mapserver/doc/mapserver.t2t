Mapserver Training Notes

(c) 2010 Linfiniti Consulting cc.

%! target       : html
%! style        : style.css
%! Options      : --toc --toc-level 3 --enum-title --css-sugar --css-inside
%! preproc      : TUT_URL   https://qgis.org
%! PostProc(html): '(?i)(<pre>)' '<div class="code">\1'
%! PostProc(html): '(?i)(</pre>)' '\1</div>'
%! encoding: iso-8859-1
% These are comments and will not be generated in any output
% -------------------

%This document is in text2tags format. You can generate html, plain text and
%moinmoin formatted documentation by running txt2tags on this document. See the
%txt2tags home page for more details.  Please insert manual line breaks in this
%document as it makes diffing for changes much easier. To do this in vim 
%automatically, select a section then issue (gq) command. Please dont
%apply vim formatting to the whol document as it screws up some formatting
%rather apply it selectively to paragraphs where needed.

% To generate the text version of this document:
% txt2tags -t txt -o django_traininelect on country to ms_readonly; django_training.t2t
% To generate the moinmoin version of this document
% txt2tags -t moin -o django_training.moin  django_training.t2t
% To generate the html version of this document
% txt2tags -t html -o django_training.html django_training.t2t

% End of comments
% -------------------

= Introducing Mapserver with QGIS =

== What is it? ==

```
MapServer is an Open Source platform for publishing spatial data and 
interactive mapping applications to the web. Originally developed in 
the mid-1990â€™s at the University of Minnesota, MapServer is released 
under an MIT-style license, and runs on all major platforms (Windows, 
Linux, Mac OS X).

   -- http://mapserver.org/
```

In this tutorial we will show you how to work with QGIS and mapserver to:

 + generate mapfiles
 + test mapfiles
 + use mapserver as a portrayal service for maps and QGIS as a client (via wms)
 +


== Installation ==

We assume you have QGIS installed already. To install mapserver under ubuntu do :

```
sudo apt-get install cgi-mapserver python-mapscript
```


The python mapscript module above is not strictly needed - 
it will be used for testing our map files.

For the above mentioned testing, you should also install mapfile 
tools plugin using the QGIS python plugin manager (you need to 
enable 3rd party repositories first).

== Installing some test data into PostGIS ==

```
#!/bin/bash
createdb mapserver
createlang plpgsql mapserver
psql mapserver < /usr/share/postgresql/8.4/contrib/postgis-1.5/postgis.sql
psql mapserver < /usr/share/postgresql/8.4/contrib/postgis-1.5/spatial_ref_sys.sql
```

Now load our sample datasets:

```
pg_restore country.dmp | mapserver
pg_restore cities.dmp | mapserver
```

Now create a non-privaledged user for use from mapserver:

```
create role ms_readonly with password 'ms_readonly' LOGIN;
```

And assign read permissions to the tables we imported:

```
grant select on cities to ms_readonly;
grant select on country to ms_readonly;
grant select on geometry_columns to ms_readonly;
```

== Creating a connection to the database in QGIS ==

Open QGIS and create a new postgres connection to your mapserver database using your 
readonly account. 

```
Layer -> Add PostGIS Layer -> New 
```

And then configure it to look like this:

[doc/img/image01.jpeg]

Now connect to your database. You may get an error like the one below, which you can 
safely ignore - it appears because we (purposely) gave the ms_readonly account limited 
permissions.

[doc/img/image02.jpeg]

Once you have connected, open the countries and cities layers in QGIS:

[doc/img/image03.jpeg]

Which should open with some random colours like this:


[doc/img/image04-thumb.jpeg]


== Making your first map file ==

What is a map file? A map file is a simple text file that defines the options that you want mapserver to use when rendering your maps. It specifies the extents of your project, Coordinate Reference Systems (CRS), which map layers to use and what symbology to use for them. In many respects, it is just like a QGIS project file, but for web mapping.

Lets dive right in! We are going to use two plugins to help us do our work.
First install the Mapfile Tools plugin in QGIS (you must enabled 3rd party repositories first).

```
[doc/img/image05.jpeg]
```

Next use the plugin manager to enable the mapserver export tool - which we will use to create your initial map file. 

```
[doc/img/image06.jpeg]
```

Save your qgis project - I called mine world.qgs. Now use the Mapserver export tool by doing 

```
Plugins -> Mapserver Export -> Mapserver Export
```

Accept the default options and save your map file. I have used the tmp directory, but you should use a more permanent location as we will be adding some additional files into the same location.

[doc/img/image07.jpeg]

Before it can be used, the map file as exported needs a few tweaks.

== Testing ==

GetCapabilities

```
http://localhost/cgi-bin/mapserv?map=/tmp/world.map&request=getCapabilities&service=wms&version=1.1.0
```

GetMap

```
http://localhost/cgi-bin/mapserv?mode=map&map=/tmp/world.map&request=getMap&service=wms&version=1.1.0&layers=Country,Cities
```


